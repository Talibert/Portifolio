{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GUILHERME\\\\documents\\\\repositories\\\\Portifolio\\\\my-app\\\\src\\\\components\\\\navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../Styles/Navbar.css\";\nimport Hero from \"./hero\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Navbar() {\n  _s();\n  // Variável para alterar a classe do Menu Hamburguer\n  const [burger_class, setBurgerClass] = useState(\"burger-bar unclicked\");\n  // Variável para alterar a variável do Menu que o Menu Hamburguer abre\n  const [menu_class, setMenuClass] = useState(\"menu hidden\");\n  // Variável que define se o menu está clicado ou não\n  const [isMenuClicked, setIsMenuClicked] = useState(false);\n  const [isVisible, setIsVisible] = useState(true);\n  const [scrollPos, setScrollPos] = useState(0);\n\n  // Função chamada quando o usuário clica no Menu Hamburguer\n  const updateMenu = () => {\n    // Se o Menu for clicado, o Menu Hamburguer e o menu recebem as classes de visivel e clicado\n    if (!isMenuClicked) {\n      setBurgerClass(\"burger-bar clicked\");\n      setMenuClass(\"menu visible\");\n    }\n    // Se o Menu não for clicado, o Menu Hamburguer e o menu recebem as classes de invisivel e não clicado\n    else {\n      setBurgerClass(\"burger-bar unclicked\");\n      setMenuClass(\"menu hidden\");\n    }\n    // A variavel que define se o Menu Hamburguer foi clicado é invertida\n    setIsMenuClicked(!isMenuClicked);\n  };\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollPos = typeof window !== 'undefined' && window.scrollY;\n      setScrollPos(currentScrollPos);\n\n      // Use a função auxiliar para atualizar o estado de visibilidade\n      updateVisibility(currentScrollPos);\n    };\n    const updateVisibility = currentScrollPos => {\n      setIsVisible(prevVisibility => {\n        const shouldShow = currentScrollPos <= 0 || currentScrollPos < scrollPos;\n        return shouldShow;\n      });\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [scrollPos]);\n  return (\n    /*#__PURE__*/\n    // div principal\n    _jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        style: {\n          display: isVisible ? 'block' : 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"burger-menu\",\n          onClick: updateMenu,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: burger_class\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: burger_class\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: burger_class\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: menu_class\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(Navbar, \"LFioFJ6LQo04Fe9Qfu7z4D41VEI=\");\n_c = Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Hero","jsxDEV","_jsxDEV","Navbar","_s","burger_class","setBurgerClass","menu_class","setMenuClass","isMenuClicked","setIsMenuClicked","isVisible","setIsVisible","scrollPos","setScrollPos","updateMenu","handleScroll","currentScrollPos","window","scrollY","updateVisibility","prevVisibility","shouldShow","addEventListener","removeEventListener","style","width","height","children","display","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/GUILHERME/documents/repositories/Portifolio/my-app/src/components/navbar.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport \"../Styles/Navbar.css\"\r\nimport Hero from \"./hero\"\r\n\r\nexport default function Navbar(){\r\n\r\n    // Variável para alterar a classe do Menu Hamburguer\r\n    const [burger_class, setBurgerClass] = useState(\"burger-bar unclicked\")\r\n    // Variável para alterar a variável do Menu que o Menu Hamburguer abre\r\n    const [menu_class, setMenuClass] = useState(\"menu hidden\")\r\n    // Variável que define se o menu está clicado ou não\r\n    const [isMenuClicked, setIsMenuClicked] = useState(false)\r\n\r\n    const [isVisible, setIsVisible] = useState(true);\r\n\r\n    const [scrollPos, setScrollPos] = useState(0);\r\n\r\n    // Função chamada quando o usuário clica no Menu Hamburguer\r\n    const updateMenu = () => {\r\n        // Se o Menu for clicado, o Menu Hamburguer e o menu recebem as classes de visivel e clicado\r\n        if(!isMenuClicked) {\r\n            setBurgerClass(\"burger-bar clicked\")\r\n            setMenuClass(\"menu visible\")\r\n        }\r\n        // Se o Menu não for clicado, o Menu Hamburguer e o menu recebem as classes de invisivel e não clicado\r\n        else {\r\n            setBurgerClass(\"burger-bar unclicked\")\r\n            setMenuClass(\"menu hidden\")\r\n        }\r\n        // A variavel que define se o Menu Hamburguer foi clicado é invertida\r\n        setIsMenuClicked(!isMenuClicked)\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n          const currentScrollPos = typeof window !== 'undefined' && window.scrollY;\r\n    \r\n          setScrollPos(currentScrollPos);\r\n    \r\n          // Use a função auxiliar para atualizar o estado de visibilidade\r\n          updateVisibility(currentScrollPos);\r\n        };\r\n    \r\n        const updateVisibility = (currentScrollPos) => {\r\n          setIsVisible((prevVisibility) => {\r\n            const shouldShow = currentScrollPos <= 0 || currentScrollPos < scrollPos;\r\n            return shouldShow;\r\n          });\r\n        };\r\n    \r\n        window.addEventListener('scroll', handleScroll);\r\n    \r\n        return () => {\r\n          window.removeEventListener('scroll', handleScroll);\r\n        };\r\n      }, [scrollPos]);\r\n\r\n    return(\r\n        // div principal\r\n        <div style={{width: '100%', height: '100vh'}}>\r\n            {/*barra superior*/}\r\n            <nav style={{ display: isVisible ? 'block' : 'none' }} >\r\n                {/*div menu de hamburguer*/}\r\n                <div className=\"burger-menu\" onClick={updateMenu}>\r\n                    {/*as tres divs abaixo representam os tres riscos do menu */}\r\n                    <div className={burger_class} ></div>\r\n                    <div className={burger_class} ></div>\r\n                    <div className={burger_class} ></div>\r\n                </div>\r\n            </nav>\r\n\r\n            {/*menu que é aberto quando clicamos no menu hamburguer*/}\r\n            <div className={menu_class}>\r\n            </div>\r\n            <Hero/>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}