{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GUILHERME\\\\documents\\\\repositories\\\\Portifolio\\\\my-app\\\\src\\\\components\\\\navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../Styles/Navbar.css\";\nimport Hero from \"./hero\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Navbar() {\n  _s();\n  // Variável para alterar a classe do Menu Hamburguer\n  const [burger_class, setBurgerClass] = useState(\"burger-bar unclicked\");\n  // Variável para alterar a variável do Menu que o Menu Hamburguer abre\n  const [menu_class, setMenuClass] = useState(\"menu hidden\");\n  // Variável que define se o menu está clicado ou não\n  const [isMenuClicked, setIsMenuClicked] = useState(false);\n  const [isVisible, setIsVisible] = useState(true);\n  const scrollPosRef = useRef(0);\n\n  // Função chamada quando o usuário clica no Menu Hamburguer\n  const updateMenu = () => {\n    // Se o Menu for clicado, o Menu Hamburguer e o menu recebem as classes de visivel e clicado\n    if (!isMenuClicked) {\n      setBurgerClass(\"burger-bar clicked\");\n      setMenuClass(\"menu visible\");\n    }\n    // Se o Menu não for clicado, o Menu Hamburguer e o menu recebem as classes de invisivel e não clicado\n    else {\n      setBurgerClass(\"burger-bar unclicked\");\n      setMenuClass(\"menu hidden\");\n    }\n    // A variavel que define se o Menu Hamburguer foi clicado é invertida\n    setIsMenuClicked(!isMenuClicked);\n  };\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollPos = typeof window !== 'undefined' && window.scrollY;\n      setIsVisible(currentScrollPos <= 0 || currentScrollPos < scrollPosRef.current);\n      scrollPosRef.current = currentScrollPos;\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  const transitionStyle = {\n    display: isVisible ? 'block' : 'none',\n    transition: 'display 0.3s ease' // Adicione a propriedade de transição aqui\n  };\n  return (\n    /*#__PURE__*/\n    // div principal\n    _jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        style: transitionStyle,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"burger-menu\",\n          onClick: updateMenu,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: burger_class\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: burger_class\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: burger_class\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isVisible ? menu_class : \"menu hidden\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(Navbar, \"SgmqOEtAuOBbm/6wkreFzcggZJc=\");\n_c = Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Hero","jsxDEV","_jsxDEV","Navbar","_s","burger_class","setBurgerClass","menu_class","setMenuClass","isMenuClicked","setIsMenuClicked","isVisible","setIsVisible","scrollPosRef","updateMenu","handleScroll","currentScrollPos","window","scrollY","current","addEventListener","removeEventListener","transitionStyle","display","transition","style","width","height","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/GUILHERME/documents/repositories/Portifolio/my-app/src/components/navbar.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\r\nimport \"../Styles/Navbar.css\"\r\nimport Hero from \"./hero\"\r\n\r\nexport default function Navbar(){\r\n\r\n    // Variável para alterar a classe do Menu Hamburguer\r\n    const [burger_class, setBurgerClass] = useState(\"burger-bar unclicked\")\r\n    // Variável para alterar a variável do Menu que o Menu Hamburguer abre\r\n    const [menu_class, setMenuClass] = useState(\"menu hidden\")\r\n    // Variável que define se o menu está clicado ou não\r\n    const [isMenuClicked, setIsMenuClicked] = useState(false)\r\n\r\n    const [isVisible, setIsVisible] = useState(true);\r\n\r\n    const scrollPosRef = useRef(0);\r\n\r\n    // Função chamada quando o usuário clica no Menu Hamburguer\r\n    const updateMenu = () => {\r\n        // Se o Menu for clicado, o Menu Hamburguer e o menu recebem as classes de visivel e clicado\r\n        if(!isMenuClicked) {\r\n            setBurgerClass(\"burger-bar clicked\")\r\n            setMenuClass(\"menu visible\")\r\n        }\r\n        // Se o Menu não for clicado, o Menu Hamburguer e o menu recebem as classes de invisivel e não clicado\r\n        else {\r\n            setBurgerClass(\"burger-bar unclicked\")\r\n            setMenuClass(\"menu hidden\")\r\n        }\r\n        // A variavel que define se o Menu Hamburguer foi clicado é invertida\r\n        setIsMenuClicked(!isMenuClicked)\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n          const currentScrollPos = typeof window !== 'undefined' && window.scrollY;\r\n    \r\n          setIsVisible(currentScrollPos <= 0 || currentScrollPos < scrollPosRef.current);\r\n          scrollPosRef.current = currentScrollPos;\r\n        };\r\n    \r\n        window.addEventListener('scroll', handleScroll);\r\n    \r\n        return () => {\r\n          window.removeEventListener('scroll', handleScroll);\r\n        };\r\n      }, []);\r\n\r\n      const transitionStyle = {\r\n        display: isVisible ? 'block' : 'none',\r\n        transition: 'display 0.3s ease', // Adicione a propriedade de transição aqui\r\n      };\r\n\r\n    return(\r\n        // div principal\r\n        <div style={{width: '100%', height: '100vh'}}>\r\n            {/*barra superior*/}\r\n            <nav style={transitionStyle} >\r\n                {/*div menu de hamburguer*/}\r\n                <div className=\"burger-menu\" onClick={updateMenu}>\r\n                    {/*as tres divs abaixo representam os tres riscos do menu */}\r\n                    <div className={burger_class} ></div>\r\n                    <div className={burger_class} ></div>\r\n                    <div className={burger_class} ></div>\r\n                </div>\r\n            </nav>\r\n\r\n            {/*menu que é aberto quando clicamos no menu hamburguer*/}\r\n            <div className={isVisible? menu_class : \"menu hidden\"}>\r\n            </div>\r\n            <Hero/>\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}