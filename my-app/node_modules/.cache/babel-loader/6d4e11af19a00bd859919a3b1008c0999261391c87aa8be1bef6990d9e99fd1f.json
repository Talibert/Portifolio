{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taliberti\\\\Documents\\\\repositories\\\\Portifolio\\\\my-app\\\\src\\\\components\\\\Hero.js\",\n  _s = $RefreshSig$();\nimport \"../Styles/Hero.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Hero() {\n  _s();\n  const [text1, setintroText1] = useState(\"\");\n  const [text2, setintroText2] = useState(\"\");\n  const [text3, setintroText3] = useState(\"\");\n  const introText1 = \"<Welcome!>\";\n  const introText2 = \"{/*I'm Guilherme Taliberti*/}\";\n  const introText3 = \"//And this is my Portifolio!\";\n  let finishText1 = false;\n\n  // UseEffect configurado para rodar sempre que a página for atualizada\n  useEffect(() => {\n    // Definição da função que irá receber o texto como argumento\n    const writeText1 = text => {\n      // Inicialização das variáveis index e newText1\n      let index = 0;\n      let newText1 = \"\";\n\n      // Função que irá escrever a palavra aos poucos\n      function updateText1() {\n        if (index < text.length) {\n          newText1 += text[index];\n          setintroText1(newText1);\n          console.log(text1);\n          index++;\n          // Rechamada da função que ocorre até que o texto acabe\n          index == text.length ? finishText1 = true : finishText1 == false;\n          console.log(finishText1);\n          setTimeout(updateText1, 200);\n        }\n      }\n      // Chamada inicial da função\n      updateText1();\n    };\n    writeText1(introText1);\n  }, []);\n  useEffect(() => {\n    // Definição da função que irá receber o texto como argumento\n    const writeText2 = text => {\n      // Inicialização das variáveis index e newText1\n      let index = 0;\n      let newtext2 = \"\";\n\n      // Função que irá escrever a palavra aos poucos\n      function updateText2() {\n        if (index < text.length) {\n          newtext2 += text[index];\n          setintroText2(newtext2);\n          console.log(text2);\n          index++;\n          // Rechamada da função que ocorre até que o texto acabe\n          setTimeout(updateText2, 200);\n        }\n      }\n      // Chamada inicial da função\n      updateText2();\n    };\n    writeText2(introText2);\n  }, [finishText1]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hero\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"texts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"introtext1\",\n        children: text1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"introtext2\",\n        children: text2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"introtext3\",\n        children: \"//And this is my Portifolio!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(Hero, \"tteF4ItWYQgnACf7VV5c30WuaLY=\");\n_c = Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Hero","_s","text1","setintroText1","text2","setintroText2","text3","setintroText3","introText1","introText2","introText3","finishText1","writeText1","text","index","newText1","updateText1","length","console","log","setTimeout","writeText2","newtext2","updateText2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Taliberti/Documents/repositories/Portifolio/my-app/src/components/Hero.js"],"sourcesContent":["import \"../Styles/Hero.css\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nexport default function Hero() {\r\n\r\n    const [text1, setintroText1] = useState(\"\")\r\n    const [text2, setintroText2] = useState(\"\")\r\n    const [text3, setintroText3] = useState(\"\")\r\n    \r\n    const introText1 = \"<Welcome!>\"\r\n    const introText2 = \"{/*I'm Guilherme Taliberti*/}\"\r\n    const introText3 = \"//And this is my Portifolio!\"\r\n\r\n    let finishText1 = false\r\n\r\n    // UseEffect configurado para rodar sempre que a página for atualizada\r\n    useEffect(() => {\r\n\r\n        // Definição da função que irá receber o texto como argumento\r\n        const writeText1 = (text) => {\r\n\r\n            // Inicialização das variáveis index e newText1\r\n            let index = 0;\r\n            let newText1 = \"\";\r\n        \r\n            // Função que irá escrever a palavra aos poucos\r\n            function updateText1() {\r\n                if (index < text.length) {\r\n                    newText1 += text[index]\r\n                    setintroText1(newText1);\r\n                    console.log(text1);\r\n                    index++;\r\n                    // Rechamada da função que ocorre até que o texto acabe\r\n                    index == text.length ? finishText1 = true : finishText1 == false\r\n                    console.log(finishText1)\r\n                    setTimeout(updateText1, 200);\r\n                }\r\n            }\r\n            // Chamada inicial da função\r\n            updateText1();\r\n        }\r\n        writeText1(introText1)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n\r\n        // Definição da função que irá receber o texto como argumento\r\n        const writeText2 = (text) => {\r\n\r\n            // Inicialização das variáveis index e newText1\r\n            let index = 0;\r\n            let newtext2 = \"\";\r\n        \r\n            // Função que irá escrever a palavra aos poucos\r\n            function updateText2() {\r\n                if (index < text.length) {\r\n                    newtext2 += text[index]\r\n                    setintroText2(newtext2);\r\n                    console.log(text2);\r\n                    index++;\r\n                    // Rechamada da função que ocorre até que o texto acabe\r\n                    setTimeout(updateText2, 200);\r\n                }\r\n            }\r\n            // Chamada inicial da função\r\n            updateText2();\r\n        }\r\n        writeText2(introText2)\r\n    }, [finishText1] )\r\n\r\n    \r\n\r\n    return(\r\n\r\n        <div className=\"hero\">\r\n            <div className=\"texts\">\r\n                {/*<img className = \"profilepicture\" src=\"/assets/guilhermeprofile.jpg\" alt=\"foto do guilherme\"></img>*/}\r\n                <h1 className = \"introtext1\">{text1}</h1>\r\n                <h1 className=\"introtext2\">{text2}</h1>\r\n                <h1 className=\"introtext3\">&#47;&#47;And this is my Portifolio!</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,OAAO,oBAAoB;AAC3B,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE3B,MAAM,CAACC,KAAK,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACO,KAAK,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACS,KAAK,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE3C,MAAMW,UAAU,GAAG,YAAY;EAC/B,MAAMC,UAAU,GAAG,+BAA+B;EAClD,MAAMC,UAAU,GAAG,8BAA8B;EAEjD,IAAIC,WAAW,GAAG,KAAK;;EAEvB;EACAf,SAAS,CAAC,MAAM;IAEZ;IACA,MAAMgB,UAAU,GAAIC,IAAI,IAAK;MAEzB;MACA,IAAIC,KAAK,GAAG,CAAC;MACb,IAAIC,QAAQ,GAAG,EAAE;;MAEjB;MACA,SAASC,WAAWA,CAAA,EAAG;QACnB,IAAIF,KAAK,GAAGD,IAAI,CAACI,MAAM,EAAE;UACrBF,QAAQ,IAAIF,IAAI,CAACC,KAAK,CAAC;UACvBX,aAAa,CAACY,QAAQ,CAAC;UACvBG,OAAO,CAACC,GAAG,CAACjB,KAAK,CAAC;UAClBY,KAAK,EAAE;UACP;UACAA,KAAK,IAAID,IAAI,CAACI,MAAM,GAAGN,WAAW,GAAG,IAAI,GAAGA,WAAW,IAAI,KAAK;UAChEO,OAAO,CAACC,GAAG,CAACR,WAAW,CAAC;UACxBS,UAAU,CAACJ,WAAW,EAAE,GAAG,CAAC;QAChC;MACJ;MACA;MACAA,WAAW,CAAC,CAAC;IACjB,CAAC;IACDJ,UAAU,CAACJ,UAAU,CAAC;EAC1B,CAAC,EAAC,EAAE,CAAC;EAELZ,SAAS,CAAC,MAAM;IAEZ;IACA,MAAMyB,UAAU,GAAIR,IAAI,IAAK;MAEzB;MACA,IAAIC,KAAK,GAAG,CAAC;MACb,IAAIQ,QAAQ,GAAG,EAAE;;MAEjB;MACA,SAASC,WAAWA,CAAA,EAAG;QACnB,IAAIT,KAAK,GAAGD,IAAI,CAACI,MAAM,EAAE;UACrBK,QAAQ,IAAIT,IAAI,CAACC,KAAK,CAAC;UACvBT,aAAa,CAACiB,QAAQ,CAAC;UACvBJ,OAAO,CAACC,GAAG,CAACf,KAAK,CAAC;UAClBU,KAAK,EAAE;UACP;UACAM,UAAU,CAACG,WAAW,EAAE,GAAG,CAAC;QAChC;MACJ;MACA;MACAA,WAAW,CAAC,CAAC;IACjB,CAAC;IACDF,UAAU,CAACZ,UAAU,CAAC;EAC1B,CAAC,EAAE,CAACE,WAAW,CAAE,CAAC;EAIlB,oBAEIZ,OAAA;IAAKyB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACjB1B,OAAA;MAAKyB,SAAS,EAAC,OAAO;MAAAC,QAAA,gBAElB1B,OAAA;QAAIyB,SAAS,EAAG,YAAY;QAAAC,QAAA,EAAEvB;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzC9B,OAAA;QAAIyB,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAErB;MAAK;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvC9B,OAAA;QAAIyB,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC5B,EAAA,CAhFuBD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}